console.assert(suma(1,2)==3, 'ERROR: el resultado esperado de 1+2 es 3');  ***sin jest****

en la consola ubicado en la carpeta del proyecto

ejecutar npm init   Nota teniendo instalado node y Frameworks Jest

package name: Calculadora  importante nombre proyecto

descripcion , version y otros puede saltarlo con Enter 

test command: jest           commando que se utilizara para ejecutar nuestros test
keywords: test, jest
author: hector
license: (ISC) MIT
Is this OK? (yes) y


Instalacion de jest en este proyecto

npm install --save-dev jest   Nota cada vez que se cree un nuevo proyecto debe ejecutar este commando tanto npm init como npm install --save-dev jest

Crear una subcarpeta __test__   2 guion bajo al principio y dos guion bajo al final por convencion

crear dentro de la nueva carpeta los archivos de prueba calc.test.js donde bamos a colocar nuestro codigo para no escribirlo en el programa (aplicacion)

module.exports = suma;   En el archivo que contiene el codigo para probar (calculadora.js) exportar la funcion suma para importarla en el archivo de prueba calc.test.js

const suma = require('../calculadora');  Importar en el archivo calculadora.js la funcion suma que vamos a evaluar para poderla utilizar

*******crear un caso de prueba para suma***************
   test('Suma de dos numeros', () => {  // sele coloca un nombre de descripcion.
       expect(suma(1,2)).toBe(3)
   })

   test('Suma de cero mas cero', () => {
       expect(suma(0,0)).toBe(0)
   })
//******************************************************
npm test  se ejecuta en la consola para que muestre el resultado de la prueba y los errores

*****Si quiero agrupar casos de prueba cuando es muy grade la cantidad de casos los meto dentro de la function describe*************
describe('Prueba de Sumas', () => {


})

dentro de esta funciona pongo mis casos de prueba

//******************************************


Nota: Eliminar lineas de codigo que se crean al principio del documento que no se nececitan y dan error en la ejecucion

//*********************test se autoejecute cada vez que halla cambios en el software**********************

en el archivo package.json en scripts cambiar la linea "test" y colocar
"test": "jest --watchAll"


//**************Configurar en Jest, el reporte de cobertura de prueba viene integrado*****************

en el archivo package.json en scripts adicionar esta linea abajo de "test": "jest --watchAll",
"test:coverage": "jest --coverage"


npm run test:coverage   Ejecutar el informe y se crea una carpeta coverage y dentro buscar index.html para verlo tambi√©n
npm run test  solo se ejecuta el test
//********************************************************************************************************
